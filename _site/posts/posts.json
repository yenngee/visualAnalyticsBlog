[
  {
    "path": "posts/2021-05-28-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "My DataViz Makeover 1. Based on the assignment [here](https://isss608.netlify.app/dataviz/dataviz1)",
    "author": [
      {
        "name": "Ng Yen Ngee",
        "url": "https://www.linkedin.com/in/ng-yen-ngee/"
      }
    ],
    "date": "2021-05-28",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1 Critique of VisualizationBy Aesthetics\r\nBy Clarity\r\n\r\n2 Visualization MakeoverProposed Design\r\nProposed Visualization\r\n\r\n3. Step by Step GuideLoading and Understanding the data\r\nData Preparation\r\nCreate Visualization\r\n\r\n4 Derived InsightsInsight 1\r\nInsight 2\r\nInsight 3\r\n\r\n\r\n1 Critique of Visualization\r\nOriginal visualization can be seen below:\r\n\r\n\r\n\r\nThe original visualization has its own flaws. We will be critiquing them below:\r\nBy Aesthetics\r\nNo.\r\nDescription of Critique\r\nConsequence/Remark\r\nA1\r\nThe font size of the overall title is smaller than the subtitle of each graph.\r\nThe attention is immediately drawn to each country’s names instead of the main title which would tell us what this graph is telling us.\r\nA2\r\nThere is no annotation to convey insights\r\nThe visualization just presents a bunch of numbers where audience are unable to make head or tails of.  e.g. there is a dip in both exports and imports for Mainland China during 2020 that is likely due to spreading of COVID and annotation should include events like this.\r\nA3\r\nGraphs is in a 2 by 3 grid.\r\nGives the impression that the category splitting the row is different from the category splitting the column which is not true. It also makes it difficult to compare information across countries.\r\nA4\r\nThere is no order in the placement of countries.\r\nMore insights can be derived if we ordered the data in a logical way.\r\nA5\r\nOverlapping of area chart colours makes it rather ugly and difficult to read\r\n\r\nBy Clarity\r\nNo.\r\nDescription of Critique\r\nConsequence/Remark\r\nC1\r\nThe width of the x-axis is all different for all countries.\r\nGives the wrong impression that some countries have more exports/imports based on area.\r\nC2\r\nThe range of the x-axis is different for Japan, and only shows 2020 on the x-axis\r\nGives the wrong impression that there is no trade in 2019.\r\nC3\r\nWithin a single subplot, the left and right y-axis have different ranges and scale, resulting in similar heights of area chart between Exports and Imports.\r\nGives the wrong impression that the amount of Import and Export are around the same for all countries. However, this may not be true.  E.g. for Hong Kong, Export ranges below 1 Million while Imports ranges above 4 Million.\r\nC4\r\nThe y-axis across all 6 countries has different scales and ranges resulting in similar heights of area charts across countries.\r\nGives the wrong impression that trade is consistent across all countries. However, if 2 countries are being compared it is apparent that this is not true.  E.g. Hong Kong vs Mainland China, Mainland China has higher amount of Import than Hong Kong\r\nC5\r\nThe x-axis and y-axis have no tick marks even through it is a quantitative scale.\r\nIt makes data difficult to read.\r\nC6\r\nArea charts used to represent Export and Import are overlapping.\r\nArea charts are best used for establishing part-to-whole relationship or to exaggerate change.\r\n2 Visualization Makeover\r\nProposed Design\r\nConsidering that we want to minimize changes made to the original visualization as much as possible, the visualization has been redesigned as follows:\r\n\r\n\r\n\r\nBelow I will discuss the various key changes that has been made and explain why the changes were made and which critique in the earlier section did these changes overcome:\r\nKeeping area chart type but stacking them instead. \r\nAs we are looking at Singapore’s top 6 merchandise trading partners and not just each countries’ export and import, it was decided to use stacked area chart to visualize the merchandise trade (sum of import and export) which shows the part to whole relationship well. Hence, we are also able to see the proportion of import and export relative to the sum of them like how Hong Kong has a very low import but actually has higher overall merchandise trade than that of Japan. This overcomes the issues raised in C6 and A5.\r\nUsing a single y-axis.\r\nOne of the key confusing points in the original design was that the y-axis keeps changing for both imports and exports and for all six countries stated in C3 and C4. Hence, in the proposed design, merchandise trade of each country shares the same y-axis on the left by placing all 6 countries on the same axis, dividing the visualization into 6 subplots horizontally instead of a 3 by 2 grid (discussed in A3). This also makes it easier to compare number across countries.\r\nCountries’ merchandise trade are ranked in descending order\r\nWe know the top 6 trading countries, but do we know the country with the highest merchandise trade? Do we know out of the 6 countries, which country has the lowest trade? This was one of the critique made in A4 which we corrected by adding the order in which the countries are placed so that we can see this ranking at a single glance.\r\nUsing Quarterly data instead of monthly data\r\nUnfortunately, one drawback of using a single y-axis and comparing 6 countries like this in 6 horizontal subplots is that each subplot has limited x-axis space. If we were to show 2 years worth of monthly data, the level of detail shown by the area of chart would be too messy. Keeping in mind that we want to show Singapore’s top 6 trading partners across 2 years, it was decided that aggregating to quarterly data is sufficient to show just enough variation across time and yet not over complicate the visualization.\r\nConsistent x-axis range in each subplot.\r\nTo solve C1 and C2, we ensured that the axis in each subplot is of the same width, with the same range starting from 2019 Q1 to 2020 Q4.\r\nOther fixes\r\nOther fixes were made such as\r\nEnsuring that the visualization title has the largest font (A1)\r\nAdding annotations referring to certain portions of the graph to deliver insights more effectively (A2)\r\nEnsuring that y-axis and x-axis all have tick marks (C5)\r\nProposed Visualization\r\nThe final proposed visualization is as follows:\r\n\r\n\r\n\r\nThe visualization can also be access on Tableau Public\r\n3. Step by Step Guide\r\nIn this portion, we will be running through the steps to create the final proposed visualization starting from loading and understanding the data, then we will run through what is done to prepare the data and finally creating the visualization on Tableau.\r\nLoading and Understanding the data\r\nThe Data obtained from the subsection of Merchandise Trade by Region/Market and was downloaded by clicking on the link Download all in Excel on the same web page.\r\nOpening the Excel file we see that there are 3 tabs:\r\nContent – describes the content of the data in each page, hence we will not use this sheet.\r\nT1 – Merchandise Imports\r\nT2 – Merchandise Exports\r\n\r\n\r\n\r\nOn the top and bottom of the tab, there are notes which we would need to remove in our data preparation step. The header row starts from 6th row. There is data with countries represented by row and monthly data represented by columns. Looking at the first few rows, there are also aggregated such as Total Merchandise and regional data such as Asia(Million Dollars) which we will need to remove. Across the columns, we would also only need to extract data from 2019 Jan to 2020 Dec. T2 has a similar structure as T1 and will be prepared in a similar way.\r\n\r\n\r\n\r\n\r\n\r\n\r\nIn our proposed visualization, we are looking at both exports and imports in a stacked area chart across time and country. Hence, we will need to prepare the data such that it is in a long format which makes it easier to manipulate in Tableau. The final form of the data should look something like this:\r\n\r\n\r\n\r\nData Preparation\r\nWe will be using Tableau Prep Builder to prepare the data. Each step is explained carefully such that it can also be replicated using alternative means.\r\nStep 1: Connect to Data Source\r\nAfter opening Tableau Prep Builder Software, we first need to connect to the Data Source. In this case, we will connect to the excel file that was previously downloaded.\r\n\r\n\r\n\r\nStep 2: Add Data to Flow\r\nIn the new interface, drag and drop T1 onto the working space on the right. Tableau Prep Builder will automatically load the data. However, we can see that it has also included the notes that we need to delete. Tableau has a handy button on the left called Use Data Interpreter which automatically extracts the table data without us having the manually delete the columns.\r\n\r\n\r\n\r\nFrom there, if we right click on T1, we can choose various steps to treat the data. We will first clean the data.\r\n\r\n\r\n\r\nStep 3a: Clean T1 - filter the data \r\nAt this step, our data looks like this.\r\n\r\n\r\n\r\nAs mentioned in Loading and Understanding the data section, we need to exclude the aggregated data. Selecting the first 7 rows until “European Union (Million Dollars)”, we can right click and select Exclude to exclude these data. At the same time, our visualization only include data from 2019 to 2020. Hence, we select the columns from all other dates and select Remove. What is left is the Import data of all countries from 2019 to 2020.\r\nNote: at this point, we could possibly only keep data from the 6 countries identified in the original visualization. It was just a personal choice to keep all of the data for now, so that we can do other visualization with all of the trade data for fun. ;)\r\n\r\n\r\n\r\nStep 3b: Clean T1 - Split column to get country\r\nIf we look under variables, we know that it is in the format of “white space” + “country name” + “(Thousand Dollars)”. We want to only extract the country name, keeping in mind the values are in thousands. Hence, if we click the 3 dots on the column, we can do an Automatic split which will extract country name. The original column is then removed as we do not need it and the new column name is changed to “Country”.\r\n\r\n\r\n\r\nThe data after this step should look like this:\r\n\r\n\r\n\r\nStep 4: Pivot T1\r\nNext, we have to convert all the data in each column and pivot them into rows. To do so, we first select all the columns except for “Country”, and click on Pivot Columns to Rows.\r\n\r\n\r\n\r\nThis will automatically create a pivot step where they will keep the “Country” as it is and create row with each row containing the value found within the original column. We rename “Pivot1 Names” as “Date” and “Pivot1 Values” as “Import (in thousand)”\r\n\r\n\r\n\r\nRepeat steps 2 to 4 for T2, except to rename the column after pivoting as “Export (in thousand)” since T2 has the same structure as T1.\r\nStep 5: Join Pivoted T1 and Pivoted T2\r\nNow we would like to combine the data set. There are different ways of doing this. However, I chose to inner join the two data sets on “Country” and “Date”. This means that the data left are countries that must have both imports and exports throughout the period of 2019 and 2020.\r\nTo do this, we simply drag Pivot 2 over Pivot 1 under the join option which will appear when you hover over it. This will be the result after removing the duplicated columns of “Date” and “Country”:\r\n\r\n\r\n\r\nNote: a manual check confirms that the 6 countries that we are concerned with is part of this data set.\r\nStep 6: Clean \r\nAt this point, it is easy to convert the “Import(in thousands)” and “Export(in thousands)” to the values multiply by 1000. Clicking the 3 dots, we select Create Calculated Field, then Custom Calculation.\r\n\r\n\r\n\r\nWe’ll come to this pop up where we can key in our new column. We will follow the following formulas:\r\nExport = [Export(in thousands)] * 1000\r\nImport = [Import(in thousands)] * 1000\r\n\r\n\r\n\r\nWe remove the old columns and select the 2 new columns (“Import” & “Export”) and pivot them again.\r\nStep 7: Pivot + Final Clean\r\nWe are very close to the final table that we need. We just need to do a final check on the column name data type and change them where necessary:\r\ncolumn name change: + “Pivot1 Name” to “Trade Type” + “Pivot1 Value” to “Amount” data type change: + “Date”: from string to date type\r\nHere is the final table:\r\n\r\n\r\n\r\nIn the work space, we can also see the following work flow:\r\n\r\n\r\n\r\nStep 8: Output\r\nWe could create an output node to output the data. However, Tableau Data Prep allows us to have a shortcut. By right-click on the last node and selecting Preview in Tableau Desktop, we can create the visualization directly.\r\nCreate Visualization\r\nWe will be using Tableau Desktop to create the visualization and this section will provide a step by step guide to do so. Before we begin, it is always good to have cursory check on the data type. We see that “Country”, “Date” and Trade Type are dimensions while “Amount” is in Measure.\r\nStep 1: \r\nThe first step is to drag and drop the data into our graph.\r\nColumns: we drag “Country” and “Date”\r\nRow: we drag “Amount”\r\nAutomatically, Tableau calculates the sum of the “Amount” which is exactly what we need. For “Date” it automatically selects the “Year” as an input dimension.\r\n\r\n\r\n\r\nStep 2:\r\nWe can see from the screenshot above there are too many countries. Hence, we need to filter the data by “Country”. Drag and drop “Country” onto the Filter card next to the graph. A window will pop-up (see screenshot below). From there we will manually select the top 6 countries: United States, Malaysia, Hong Kong, Japan, Mainland China and Taiwan.\r\n\r\n\r\n\r\nResults will look like this:\r\n\r\n\r\n\r\nStep 3:\r\nNow we have line charts of each countries’ total trade merchandise. However, we would like to split them into “Import” and “Export”. We drag “Trade Type” and drop them in colour. Tableau will split the data to 2 lines.\r\n\r\n\r\n\r\nStep 4:\r\nTableau automatically churns out line graphs for us. However, following our proposed design, we want an area chart. On the left side under Marks, we can select Area in the drop down to turn this into an area chart.\r\n\r\n\r\n\r\nStep 5: \r\nThis shows the yearly data for each country but we want quarterly data. Hence clicking on the triangle in the “Year(Date)” on “Date”, we can select Quarter from the list. Note that we choose the Quarter in the lower section, this would give a measure rather than a dimension. This means that the area chart would be continuous within each countries’ subplot.\r\n\r\n\r\n\r\nThis is the result:\r\n\r\n\r\n\r\nstep 6: \r\nNow we have the foundation of the visualization. Let’s sort them in descending order. Under the Filters card, we click the triangle button on “Country” and select sort. A window will pop-up and we need to select such that we are sorting by Field, in Descending Order, using the Field Name: Amount with Aggregation: Sum.\r\n\r\n\r\n\r\nThis is the result:\r\n\r\n\r\n\r\nStep 7: \r\nLet us now adjust the axis. For the y-axis, the values are in Billions with horizontal grid lines. All we need to do is to add the units to indicate dollars. So we right-click on the y-axis, and select format in the drop down. The formatting pane will appear on the left. Since we are formatting the Axis, we do not change the tab. Under the scale, we can format the Number selecting Currency [Custom]:\r\nDecimal places: 0\r\nDisplay Units: Billion (B)\r\nThe changes can be seen immediately on the y-axis:\r\n\r\n\r\n\r\nStep 8: \r\nFormatting x-axis is slightly more tricky. Due to the limited space, we face the following issues for each subplot:\r\nnot able to display label for all quarters. (i.e. cannot use 2019 Q1, 2019 Q2,…, 2020 Q4)\r\nnot able to display simplified labels either (i.e. cannot use Q1, Q2, Q3, Q4, Q1, Q1, Q2, Q3, Q4)\r\nnot able to display the year to split the Quarters without splitting area chart per country which is not what we want. (If we add year, it will be added as a dimension variable and tableau will automatically displays it on top. If we use only dimension variable, the graphs will split as mention.)\r\nHence to overcome these issues, we worked around it:\r\nFirst let us format the x-axis such that it displays Q1,Q2 etc. Right click on the x-axis and selecting format will open the format pane on the left. Under Scale, Dates, we select Custom and key in “Q”q.\r\nWe can see the changes immediately on the right.\r\n\r\n\r\n\r\nLet us also change all the font size under Default and Title to size 8, Tableau Book.\r\n\r\n\r\n\r\nNext we right click on the x-axis to Edit axis, and click on the tab Tick Marks We uncheck Show times as this is irrelevant for us. We will do the following changes:\r\nMajor Tick Marks\r\nselect Fixed\r\nTick origin: 1/1/2019\r\nInterval: 2\r\nUnit: Quarters\r\n\r\nMinor Tick Marks\r\nselect Fixed\r\nTick origin: 1/4/2019\r\nInterval: 2\r\nUnit: Quarters\r\n\r\nNow we can see that there are tick marks every quarter. The major tick marks will mark Q1 and Q3.\r\n\r\n\r\n\r\nSwitch to General to update the Axis Title by keying in “2019 | 2020” into Title This is the little trick to label the year in the x-axis since the title will always be centered for each subplot.\r\n\r\n\r\n\r\nNow we have a good x-axis with consistent width, consistent tick marks, sufficient labels. This is the end result:\r\n\r\n\r\n\r\nStep 9:\r\nNext we want to add circles to the total merchandise trade to indicate the points more clearly. Unfortunately, Tableau does not provide the option of adding shapes or marks to the individual points for area charts unlike line chart. Hence, we need to work around it by using dual axis.\r\nFirst, we drag Amount to the right side of the chart until we see a dotted line. This will duplicate the same chart only with the y-axis on the right this time. If we look at the card under Marks, there is now additional cards. We pick the second one and make the following changes:\r\nChange Area to Circle in the dropdown\r\nRemove Trade type from colos as we do not need to split the data\r\nchange the colour to something darker for visibility\r\nchange the size to something smaller so that it does not overwhelm the visualization.\r\nThe results will be something like this:\r\n\r\n\r\n\r\nStep 10: \r\nLet us be a bit more specific with our titles. For the title at the y-axis, let us rename it as “Merchandise Trade Amount” For the “Country” at the top, it is rather redundant and so we will remove it. For the overall title we will write: “Singapore’s Top Six Merchandise Trading Partners (2019-2020)”\r\nLet us also adjust the font size and font for consistency and so that attention is in the right place:\r\nTitle Format: Tableau Light, size 15, Bold\r\n“Country” Format: Tableau Book, size 9, colour html: #555555\r\ny-axis title Format: Tableau Book, size 9, colour html: #555555\r\nThe results will be something like this:\r\n\r\n\r\n\r\nStep 11 \r\nNow to add annotations and reference lines Right-click on the white space to select annotations, and then Area, will pop-up a window for editing the annotation. For this project, we select Font = “Tableau Book” and Font Size = 9. We place the annotations in areas where the content of the annotations makes the most sense, taking into consideration the white spaces in the visualization.\r\n\r\n\r\n\r\nOne unique even that happened in 2020 is the spreading of COVID, which affected the whole world. To highlight that period, we added a reference band. On the x-axis, right click to select Add Reference Line. A window will pop-up. As we would like to highlight a segment for each country, we select Band, Per Pane, ensuring that the date values in Band From is “1/1/2020” and date values in Band To is “1/4/2020”. Next, we edit the Label to Custom, entering “Covid Worsen in SG”, putting the Label to None under Band To so that only one label will appear.\r\n\r\n\r\n\r\nand we are done!\r\n4 Derived Insights\r\nInsight 1\r\nSingapore’s top 6 merchandise trading partners are as follows, ranked in descending order:\r\nMainland China\r\nMalaysia\r\nUnited States\r\nTaiwan\r\nHong Kong\r\nJapan\r\nThis ranking does not surprise us. As the world’s manufactoring superpower and given geographical proximity, it is natural for China to become the highest merchandise trading partner of Singapore. This is followed by Malaysia, just by virtue of the fact that Singapore and Malaysia are neighbours and transporting goods are made convenient. The United States comes a close third as the third largest global merchandise exporter. Followed by Taiwan, Hong Kong and Japan which are all in Asia. It is also interesting to note that all 6 countries have Free Trade Agreements with Singapore.\r\nEven though there is a clear ranking, we can also see from the visualization that there is no one country’s trade that exceeds other countries’ trade by a large proportion which implies that Singapore does not solely rely on a single country for imports and exports.\r\nInsight 2\r\nIf we observe the proportions of the export and imports in the visualization, we can see an exception where Singapore’s trade exports with Hong Kong is at least 10 times bigger than that of imports resulting in a large merchandise trade surplus. (This only occurs with Hong Kong and not with any of the other 6 countries.) It seems that Hong Kong is at the disadvantage here, however, knowing that Hong Kong has close relations with Singapore, it is likely that Hong Kong benefits from Singapore through means other than merchandise trading.\r\nNotes about trade: + Trade surplus (positive trade balance) -> when exports exceed imports + Trade deficit (Negative trade balance) -> when exports are less than imports + Trade surplus is harmful when government uses protectionism + Otherwise, most countries will strive for Trade surplus\r\nInsight 3\r\nIn 2020 Q1-Q2 was when COVID situation worsened in Singapore, resulting in circuit breaker where many work places had to be shut down for 2 months except for essential services. It is expected that trade (especially exports) fall during this period. This is apparent for Mainland China and Malaysia where we observe a relatively larger dip in trade in this period. There is a slight decrease in trade during this period for the other countries except for Taiwan and it could be that the goods that Singapore trade with Taiwan remains unaffected by the COVID situation.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-06-12T22:43:57+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-13-dataviz-makeover-2/",
    "title": "DataViz Makeover 2",
    "description": "My DataViz Makeover 2. Based on the assignment [here](https://isss608.netlify.app/dataviz/dataviz2)",
    "author": [
      {
        "name": "Ng Yen Ngee",
        "url": "https://www.linkedin.com/in/ng-yen-ngee/"
      }
    ],
    "date": "2021-05-28",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1 Critique of VisualizationBy Aesthetics\r\nBy Clarity\r\n\r\n2 Visualization MakeoverProposed Design\r\n\r\n{r} # knitr::include_graphics(\"img/design_draft.jpg\") #Proposed Visualization\r\n\r\n{r} # knitr::include_graphics(\"img/final.jpg\") #3. Step by Step GuideLoading and Understanding the data\r\n\r\n\r\n{r} # knitr::include_graphics(\"img/step-A3_T1_final.JPG\") #Data Preparation\r\n\r\n\r\n1 Critique of Visualization\r\nOriginal visualization can be seen below:\r\n\r\n\r\n\r\nThe original visualization has its own flaws. We will be critiquing them below:\r\nBy Aesthetics\r\nA1 - A colour representing each partner: Each partner is represented by a colour which serves no further purpose other than identifying countries. However this is redundant as there are labels identifying them, hence making the visualization colourful without any meaning. We could perhaps make better use of the colour to represent balance of trade thus showing additional information.\r\nA2 - bubbles are opaque: Even though, with some interaction, the making the\r\n*A3 -\r\nBy Clarity\r\nC1. Axis label not on typical side of Axis.\r\nC2. Misleading circle size: When the total trade of one country is double another, the area of circle size is not double, but in fact quadrupled.\r\n\r\n2 Visualization Makeover\r\nProposed Design\r\nConsidering that we want to minimize changes made to the original visualization as much as possible, the visualization has been redesigned as follows:\r\n{r} # knitr::include_graphics(\"img/design_draft.jpg\") #\r\nBelow I will discuss the various key changes that has been made and explain why the changes were made and which critique in the earlier section did these changes overcome:\r\nKeeping area chart type but stacking them instead. \r\nAs we are looking at Singapore’s top 6 merchandise trading partners and not just each countries’ export and import, it was decided to use stacked area chart to visualize the merchandise trade (sum of import and export) which shows the part to whole relationship well. Hence, we are also able to see the proportion of import and export relative to the sum of them like how Hong Kong has a very low import but actually has higher overall merchandise trade than that of Japan. This overcomes the issues raised in C6 and A5.\r\nUsing a single y-axis.\r\nOne of the key confusing points in the original design was that the y-axis keeps changing for both imports and exports and for all six countries stated in C3 and C4. Hence, in the proposed design, merchandise trade of each country shares the same y-axis on the left by placing all 6 countries on the same axis, dividing the visualization into 6 subplots horizontally instead of a 3 by 2 grid (discussed in A3). This also makes it easier to compare number across countries.\r\nCountries’ merchandise trade are ranked in descending order\r\nWe know the top 6 trading countries, but do we know the country with the highest merchandise trade? Do we know out of the 6 countries, which country has the lowest trade? This was one of the critique made in A4 which we corrected by adding the order in which the countries are placed so that we can see this ranking at a single glance.\r\nUsing Quarterly data instead of monthly data\r\nUnfortunately, one drawback of using a single y-axis and comparing 6 countries like this in 6 horizontal subplots is that each subplot has limited x-axis space. If we were to show 2 years worth of monthly data, the level of detail shown by the area of chart would be too messy. Keeping in mind that we want to show Singapore’s top 6 trading partners across 2 years, it was decided that aggregating to quarterly data is sufficient to show just enough variation across time and yet not over complicate the visualization.\r\nConsistent x-axis range in each subplot.\r\nTo solve C1 and C2, we ensured that the axis in each subplot is of the same width, with the same range starting from 2019 Q1 to 2020 Q4.\r\nOther fixes\r\nOther fixes were made such as\r\nEnsuring that the visualization title has the largest font (A1)\r\nAdding annotations referring to certain portions of the graph to deliver insights more effectively (A2)\r\nEnsuring that y-axis and x-axis all have tick marks (C5)\r\nProposed Visualization\r\nThe final proposed visualization is as follows:\r\n{r} # knitr::include_graphics(\"img/final.jpg\") #\r\n\r\n3. Step by Step Guide\r\nIn this portion, we will be running through the steps to create the final proposed visualization starting from loading and understanding the data, then we will run through what is done to prepare the data and finally creating the visualization on Tableau.\r\nLoading and Understanding the data\r\nThe Data obtained from the subsection of Merchandise Trade by Region/Market and was downloaded by clicking on the link Download all in Excel on the same web page.\r\nOpening the Excel file we see that there are 3 tabs:\r\nContent – describes the content of the data in each page, hence we will not use this sheet.\r\nT1 – Merchandise Imports\r\nT2 – Merchandise Exports\r\n\r\n\r\n\r\nOn the top and bottom of the tab, there are notes which we would need to remove in our data preparation step. The header row starts from 6th row. There is data with countries represented by row and monthly data represented by columns. Looking at the first few rows, there are also aggregated such as Total Merchandise and regional data such as Asia(Million Dollars) which we will need to remove. Across the columns, we would also only need to extract data from 2019 Jan to 2020 Dec. T2 has a similar structure as T1 and will be prepared in a similar way.\r\n\r\n\r\n\r\n\r\n\r\n\r\nIn our proposed visualization, we are looking at both exports and imports in a stacked area chart across time and country. Hence, we will need to prepare the data such that it is in a long format which makes it easier to manipulate in Tableau. The final form of the data should look something like this:\r\n{r} # knitr::include_graphics(\"img/step-A3_T1_final.JPG\") #\r\nData Preparation\r\nWe will be using Tableau Prep Builder to prepare the data. Each step is explained carefully such that it can also be replicated using alternative means.\r\nStep 1: Connect to Data Source\r\nAfter opening Tableau Prep Builder Software, we first need to connect to the Data Source. In this case, we will connect to the excel file that was previously downloaded.\r\n\r\n\r\n\r\nStep 2: Add Data to Flow\r\nIn the new interface, drag and drop T1 onto the working space on the right. Tableau Prep Builder will automatically load the data. However, we can see that some of the rows has been captured as notes that we need to delete. Tableau has a handy button on the left called Use Data Interpreter which automatically extracts the table data without us having the manually delete the rows.\r\n\r\n\r\n\r\nFrom there, if we right click on T1, we can choose various steps to treat the data. We will first clean the data.\r\n\r\n\r\n\r\nStep 3a: Clean T1 - filter the data \r\nAt this step, our data looks like this.\r\n\r\n\r\n\r\nAs mentioned in Loading and Understanding the data section, we need to exclude the aggregated data. Selecting the first 7 rows until “European Union (Million Dollars)”, we can right click and select Exclude to exclude these data.\r\nNote: at this point, we could possibly only keep data from the 10 countries identified in the original visualization with data from the year 2020. However, we choose to keep all of the data so that we can extend the visualization for more possibilities of animation within the visualization. ;)\r\n\r\n\r\n\r\nStep 3b: Clean T1 - Split column to get country\r\nIf we look under variables, we know that it is in the format of “white space” + “country name” + “(Thousand Dollars)”. We want to only extract the country name, keeping in mind the values are in thousands. Hence, if we click the 3 dots on the column, we can do an Automatic split which will split the original column into the variable we want.\r\n\r\n\r\n\r\nThe result after the split is the a new column “Variables - Split 1” which contains the Countries’ name in the format that we want. The original “Variables” column is then removed by clicking the 3 dots on the column, and selecting remove. “Variables - Split 1” is renamed to to “Country” simply by double clicking on the column name and keying in the new column name.\r\nThe data after this step should look like this:\r\n\r\n\r\n\r\nStep 4: Pivot T1\r\nNext, we have to convert all the data in each column and pivot them into rows. To do so, we first select all the columns except for “Country”, and click on Pivot Columns to Rows.\r\n\r\n\r\n\r\nThis will automatically create a pivot step where they will keep the “Country” as it is and create row with each row containing the value found within the original column.\r\n\r\n\r\n\r\nStep 5: Create calculated field\r\nThe values, as we noted in step 3b are in thousands. Hence, we need to create a new column to multiply the values by 1000. Click on the 3 dots and select Create Calculated Field and then Custom Calculation.\r\n\r\n\r\n\r\nA pop up Add Field will appear. We key in the name “Imports” and the formula [Pivot1 Values] * 1000 into the blanks and click save. A new column “Imports” will be created.\r\nWe rename “Pivot1 Names” as “Date” and remove “Pivot1 Values” to get:\r\n\r\n\r\n\r\nNotice that we have kept the null values in. These null values occur with the smaller trading partners. This is because Tableau does show if the visualization contains null values or not and would be a great indication to cross-check the data to understand why there was a null value.\r\nGiven that T2 has the same structure as T1, we can repeat steps 2 to 5 for T2, except to name the calculated field after pivoting as “Exports”.\r\nStep 5: Join Pivoted T1 and Pivoted T2\r\nNow we would like to combine the data set. There are different ways of doing this. However, I chose to inner join the two data sets on “Country” and “Date”. This means that the data left are countries that must have both imports and exports throughout the years\r\nTo do this, we simply drag Pivot 2 over Pivot 1 under the join option which will appear when you hover over it.\r\n\r\n\r\n\r\nTableau automatically joins the two table on “Country”. However, we want the tables to join on both “Country” and “Date”. We select Settings on the left-hand side, then click on the plus simple on the top right hand of the Settings pane. We would be able to add “Date” as a second column to join on.\r\n\r\n\r\n\r\nWe select the venn diagram such that it is completely shaded to select a full outer join. This is so that we keep every data, including data that has imports but no exports and vice versa.\r\n\r\n\r\n\r\nStep 6: clean and check data types \r\nWe are almost done! Now what is left, is to check the data type. These are the desired data types of our data:\r\n“Date” - Date\r\n“Country” - String\r\n“Imports” - Number\r\n“Exports” - Number\r\n\r\n\r\n\r\nWe can see that we need to change our “Date” from string to date type. We select the Abc just on top of the column name. We can see that the data type is at String. We select Date to change the data type.\r\n\r\n\r\n\r\nStep 8: Output\r\nFor an output, we create an output node to output the data. Selecting the folder and file name we want to save as, and clicking Run Flow, we create a .hyper extract which we would be using for creating our visualization.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-06-17T01:09:46+08:00",
    "input_file": "dataviz-makeover-2.utf8.md"
  },
  {
    "path": "posts/2021-05-22-my-first-post/",
    "title": "My first post",
    "description": "Learning how to do R Markdown following lecture from prof.",
    "author": [
      {
        "name": "Ng Yen Ngee",
        "url": "https://www.linkedin.com/in/ng-yen-ngee/"
      }
    ],
    "date": "2021-05-22",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nIn this article, we will show you how to plot a figure with multiple histograms by using ggplot2 and ggpubr packages.\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\n\r\nTo insert a graph.\r\n\r\nNext, you will use the code chunk below to install and launch ggpubr and tidyverse in RStudio.\r\nR code\r\npackages = c(‘ggpubr’, ‘tidyverse’)\r\nfor(p in packages){library if(!require(p, character.only = T)){ install.packages(p) } library(p, character.only = T) }\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\nR code\r\nwine <- read_csv(“data/wine_quality.csv”)\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted by using ggplot() and geom_histogram() of ggplot2 package. Then, ggarrange() of ggpubr package is used to patch these histogram into a single figure to reveal the distribution of the selected variables in the wine quality data sets.\r\nRcode\r\nfa <- ggplot(data=wine, aes(x= fixed acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) va <- ggplot(data=wine, aes(x= volatile acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ca <- ggplot(data=wine, aes(x= citric acid)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) rs <- ggplot(data=wine, aes(x= residual sugar)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ch <- ggplot(data=wine, aes(x= chlorides)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) fSO2 <- ggplot(data=wine, aes(x= free sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) tSO2 <- ggplot(data=wine, aes(x= total sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) density <- ggplot(data=wine, aes(x= density)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) pH <- ggplot(data=wine, aes(x= pH)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) sulphates <- ggplot(data=wine, aes(x= sulphates)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) alcohol <- ggplot(data=wine, aes(x= alcohol)) + geom_histogram(bins=20, color=“black”, fill=“light blue”)\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, ncol = 4, nrow = 3)\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-06-12T22:29:53+08:00",
    "input_file": {}
  }
]
